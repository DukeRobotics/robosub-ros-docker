name: build

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

  # Run tests for any PRs.
  pull_request:

jobs:
  core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, amd64]
      fail-fast: false
    env:
      IMAGE_NAME: 'dukerobotics/robosub-ros:core-${{ matrix.arch }}'
      TARGETPLATFORM: 'linux/${{ matrix.arch }}'
      FOLDER_NAME: core
      BASE_IMAGE: dukerobotics/robosub-ros:base
      FILE_NAME: '${{ matrix.arch }}-core.tar.gz'
    steps:
      - uses: actions/checkout@v2
      - name: Setup environment and build
        run: |
          ./.github/workflows/build.sh
      - name: Push image
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker push ${IMAGE_NAME}
      - name: Save image
        run: |
          docker save ${IMAGE_NAME} | gzip > ${FILE_NAME}
      - name: Create artifact from image
        uses: actions/upload-artifact@v2
        with:
          name: core
          path: ${{ env.FILE_NAME }}

  onboard:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        arch: [arm64, amd64]
      fail-fast: false
    env:
      IMAGE_NAME: 'dukerobotics/robosub-ros:onboard-${{ matrix.arch }}'
      TARGETPLATFORM: 'linux/${{ matrix.arch }}'
      FOLDER_NAME: onboard
      BASE_IMAGE: 'dukerobotics/robosub-ros:core-${{ matrix.arch }}'
      FILE_NAME: '${{ matrix.arch }}-core.tar.gz'
    steps:
      - uses: actions/checkout@v2
      - name: Get core image
        uses: actions/download-artifact@v2
        with: 
          name: core
          path: core
      - name: Load core image
        run: |
          docker load < ./core/${FILE_NAME}
          rm -rf core
      - name: Setup environment and build
        run: |
          ./.github/workflows/build.sh
          ./.github/workflows/test.sh
      - name: Push image
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker push ${IMAGE_NAME}

  push:
    runs-on: ubuntu-latest
    needs: onboard
    steps:
      - uses: actions/checkout@v2
      - name: Push images to latest
        if: github.event_name == 'push'
        run: |
          ./.github/workflows/setup.sh
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker buildx imagetools create --tag dukerobotics/robosub-ros:core dukerobotics/robosub-ros:core-amd64 dukerobotics/robosub-ros:core-arm64
          docker buildx imagetools create --tag dukerobotics/robosub-ros:onboard dukerobotics/robosub-ros:onboard-amd64 dukerobotics/robosub-ros:onboard-arm64
      - name: Cleanup artifacts
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/workflows/cleanup.sh
  
  landside:
    runs-on: ubuntu-latest
    needs: core
    env:
      IMAGE_NAME: dukerobotics/robosub-ros:landside
      BASE_IMAGE: dukerobotics/robosub-ros:core-amd64
    steps:
      - uses: actions/checkout@v2 
      - name: Get core image
        uses: actions/download-artifact@v2
        with: 
          name: core
          path: core
      - name: Load core image
        run: |
          docker load < ./core/amd64-core.tar.gz
          rm -rf core
      - name: Setup environment and build
        working-directory: 
        run: |
          cd landside
          docker build --build-arg BASE_IMAGE=${BASE_IMAGE} -t  ${IMAGE_NAME} .
      - name: Push image
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker push ${IMAGE_NAME}
