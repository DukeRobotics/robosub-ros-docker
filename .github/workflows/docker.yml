name: build

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
  # Run tests for any PRs.
  pull_request:
  # Run tests on repository dispatch
  repository_dispatch:
    types: [docker-test-command]

jobs:
  core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, amd64]
      fail-fast: false
    env:
      IMAGE_NAME: 'dukerobotics/robosub-ros:core-${{ matrix.arch }}'
      TARGETPLATFORM: 'linux/${{ matrix.arch }}'
      FOLDER_NAME: core
      BASE_IMAGE: dukerobotics/robosub-ros:base
      FILE_NAME: '${{ matrix.arch }}-core.tar.gz'
    steps:
      - name: Set target branch for repository dispatch
        if: github.event_name == 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.event.client_payload.pull_request.head.sha }}
      - name: Set target branch for PRs and pushes
        if: github.event_name != 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.sha }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.DOCKER_BRANCH }}
      - name: Setup environment and build
        run: |
          ./.github/workflows/build.sh
      - name: Push image to dockerhub
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker push ${IMAGE_NAME}
      - name: Save image
        run: |
          docker save ${IMAGE_NAME} | gzip > ${FILE_NAME}
      - name: Create artifact from image
        uses: actions/upload-artifact@v2
        with:
          name: core
          path: ${{ env.FILE_NAME }}
      - name: Report failure
        if: failure() && github.event_name == 'repository_dispatch'
        uses: peter-evans/create-or-update-comment@v1
        with:
          repository:  ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Hello @${{ github.event.client_payload.github.actor }},
            Unfortunately, this pull request failed when building core on architecture ${{ matrix.arch }}.
            [Click here to see the command run output][1]

            [1]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  onboard:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        arch: [arm64, amd64]
      fail-fast: false
    env:
      IMAGE_NAME: 'dukerobotics/robosub-ros:onboard-${{ matrix.arch }}'
      TARGETPLATFORM: 'linux/${{ matrix.arch }}'
      FOLDER_NAME: onboard
      BASE_IMAGE: 'dukerobotics/robosub-ros:core-${{ matrix.arch }}'
      FILE_NAME: '${{ matrix.arch }}-core.tar.gz'
    steps:
      - name: Set target branch for repository dispatch
        if: github.event_name == 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.event.client_payload.pull_request.head.sha }}
          TARGET_BRANCH: ${{ github.event.client_payload.slash_command.arg1 }}
      - name: Set target branch for PRs and pushes
        if: github.event_name != 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.sha }}
          TARGET_BRANCH: "master"
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.DOCKER_BRANCH }}
      - name: Get core image
        uses: actions/download-artifact@v2
        with: 
          name: core
          path: core
      - name: Load core image
        run: |
          docker load < ./core/${FILE_NAME}
          rm -rf core
      - name: Setup environment and build
        run: |
          ./.github/workflows/build.sh
      - name: Test build
        run: |
          ./.github/workflows/test.sh
      - name: Push image to dockerhub
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker push ${IMAGE_NAME}
      - name: Report failure
        if: failure() && github.event_name == 'repository_dispatch'
        uses: peter-evans/create-or-update-comment@v1
        with:
          repository:  ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Hello @${{ github.event.client_payload.github.actor }},
            Unfortunately, this pull request failed when building and testing onboard on architecture ${{ matrix.arch }} on branch ${{ env.TARGET_BRANCH }} of the code repository.
            [Click here to see the command run output][1]

            [1]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  push:
    runs-on: ubuntu-latest
    needs: [onboard, landside]
    steps:
      - name: Set target branch for repository dispatch
        if: github.event_name == 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.event.client_payload.pull_request.head.sha }}
          TARGET_BRANCH: ${{ github.event.client_payload.slash_command.arg1 }}
      - name: Set target branch for PRs and pushes
        if: github.event_name != 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.sha }}
          TARGET_BRANCH: "master"
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.DOCKER_BRANCH }}
      - name: Push images to latest on dockerhub
        if: github.event_name == 'push'
        run: |
          ./.github/workflows/setup.sh
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker buildx imagetools create --tag dukerobotics/robosub-ros:core dukerobotics/robosub-ros:core-amd64 dukerobotics/robosub-ros:core-arm64
          docker buildx imagetools create --tag dukerobotics/robosub-ros:onboard dukerobotics/robosub-ros:onboard-amd64 dukerobotics/robosub-ros:onboard-arm64
      - name: Report success
        if: github.event_name == 'repository_dispatch'
        uses: peter-evans/create-or-update-comment@v1
        with:
          repository:  ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Hello @${{ github.event.client_payload.github.actor }},
            Congratulations!!! All builds and tests were successful on branch ${{ env.TARGET_BRANCH  }} of the code repository.
            [Click here to see the command run output][1]

            [1]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Cleanup artifacts
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/workflows/cleanup.sh
  
  landside:
    runs-on: ubuntu-latest
    needs: core
    env:
      IMAGE_NAME: dukerobotics/robosub-ros:landside
      BASE_IMAGE: dukerobotics/robosub-ros:core-amd64
      FOLDER_NAME: landside
    steps:
      - name: Set target branch for repository dispatch
        if: github.event_name == 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.event.client_payload.pull_request.head.sha }}
          TARGET_BRANCH: ${{ github.event.client_payload.slash_command.arg1 }}
      - name: Set target branch for PRs and pushes
        if: github.event_name != 'repository_dispatch'
        uses: allenevans/set-env@v1.1.0
        with:
          DOCKER_BRANCH: ${{ github.sha }}
          TARGET_BRANCH: "master"
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.DOCKER_BRANCH }}
      - name: Get core image
        uses: actions/download-artifact@v2
        with: 
          name: core
          path: core
      - name: Load core image
        run: |
          docker load < ./core/amd64-core.tar.gz
          rm -rf core
      - name: Setup environment and build
        run: |
          cd ${FOLDER_NAME}
          docker build --build-arg BASE_IMAGE=${BASE_IMAGE} -t  ${IMAGE_NAME} .
      - name: Test build
        run: |
          ./.github/workflows/test.sh
      - name: Push image to dockerhub
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_BOT_TOKEN }}" | docker login -u dukeroboticsbot --password-stdin
          docker push ${IMAGE_NAME}
      - name: Report failure
        if: failure() && github.event_name == 'repository_dispatch'
        uses: peter-evans/create-or-update-comment@v1
        with:
          repository:  ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Hello @${{ github.event.client_payload.github.actor }},
            Unfortunately, this pull request failed when building and testing landside on branch ${{ env.TARGET_BRANCH }} of the code repository.
            [Click here to see the command run output][1]

            [1]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
